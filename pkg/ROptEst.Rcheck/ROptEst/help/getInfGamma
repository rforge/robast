getInfGamma             package:ROptEst             R Documentation

_G_e_n_e_r_i_c _F_u_n_c_t_i_o_n _f_o_r _t_h_e _C_o_m_p_u_t_a_t_i_o_n _o_f _t_h_e _O_p_t_i_m_a_l _C_l_i_p_p_i_n_g _B_o_u_n_d

_D_e_s_c_r_i_p_t_i_o_n:

     Generic function for the computation of the optimal clipping
     bound. This function is rarely called directly. It is called by
     'getInfClip'  to compute optimally robust ICs.

_U_s_a_g_e:

     getInfGamma(L2deriv, risk, neighbor, biastype, ...)

     ## S4 method for signature 'UnivariateDistribution, asMSE,
     ##   ContNeighborhood, BiasType':
     getInfGamma(L2deriv, 
          risk, neighbor, biastype = symmetricBias(), cent, clip)

     ## S4 method for signature 'UnivariateDistribution,
     ##   asGRisk, TotalVarNeighborhood, BiasType':
     getInfGamma(L2deriv, 
          risk, neighbor, biastype = symmetricBias(), cent, clip)

     ## S4 method for signature 'RealRandVariable, asMSE,
     ##   ContNeighborhood, BiasType':
     getInfGamma(L2deriv, 
          risk, neighbor, biastype = symmetricBias(), Distr, stand, cent, clip)

     ## S4 method for signature 'UnivariateDistribution,
     ##   asUnOvShoot, ContNeighborhood, BiasType':
     getInfGamma(L2deriv, 
          risk, neighbor, biastype = symmetricBias(), cent, clip)

     ## S4 method for signature 'UnivariateDistribution, asMSE,
     ##   ContNeighborhood, onesidedBias':
     getInfGamma(L2deriv, 
          risk, neighbor, biastype = positiveBias(), cent, clip)

     ## S4 method for signature 'UnivariateDistribution, asMSE,
     ##   ContNeighborhood, asymmetricBias':
     getInfGamma(L2deriv, 
         risk, neighbor, biastype  = asymmetricBias(), cent, clip)

_A_r_g_u_m_e_n_t_s:

 L2deriv: L2-derivative of some L2-differentiable family  of
          probability measures. 

    risk: object of class '"RiskType"'. 

neighbor: object of class '"Neighborhood"'. 

biastype: object of class '"BiasType"' 

     ...: additional parameters 

    cent: optimal centering constant. 

    clip: optimal clipping bound. 

   stand: standardizing matrix. 

   Distr: object of class '"Distribution"'. 

_D_e_t_a_i_l_s:

     The function is used in case of asymptotic G-risks; confer
     Ruckdeschel and Rieder (2004).

_M_e_t_h_o_d_s:

     _L_2_d_e_r_i_v = "_U_n_i_v_a_r_i_a_t_e_D_i_s_t_r_i_b_u_t_i_o_n", _r_i_s_k = "_a_s_M_S_E",  _n_e_i_g_h_b_o_r = "_C_o_n_t_N_e_i_g_h_b_o_r_h_o_o_d",  _b_i_a_s_t_y_p_e = "_B_i_a_s_T_y_p_e" 
          used by 'getInfClip' for symmetric bias. 

     _L_2_d_e_r_i_v = "_U_n_i_v_a_r_i_a_t_e_D_i_s_t_r_i_b_u_t_i_o_n", _r_i_s_k = "_a_s_G_R_i_s_k",  _n_e_i_g_h_b_o_r = "_T_o_t_a_l_V_a_r_N_e_i_g_h_b_o_r_h_o_o_d",  _b_i_a_s_t_y_p_e = "_B_i_a_s_T_y_p_e" 
          used by 'getInfClip' for symmetric bias. 

     _L_2_d_e_r_i_v = "_R_e_a_l_R_a_n_d_V_a_r_i_a_b_l_e", _r_i_s_k = "_a_s_M_S_E",  _n_e_i_g_h_b_o_r = "_C_o_n_t_N_e_i_g_h_b_o_r_h_o_o_d",  _b_i_a_s_t_y_p_e = "_B_i_a_s_T_y_p_e" 
          used by 'getInfClip' for symmetric bias. 

     _L_2_d_e_r_i_v = "_U_n_i_v_a_r_i_a_t_e_D_i_s_t_r_i_b_u_t_i_o_n", _r_i_s_k = "_a_s_U_n_O_v_S_h_o_o_t",  _n_e_i_g_h_b_o_r = "_C_o_n_t_N_e_i_g_h_b_o_r_h_o_o_d",  _b_i_a_s_t_y_p_e = "_B_i_a_s_T_y_p_e" 
          used by 'getInfClip' for symmetric bias. 

     _L_2_d_e_r_i_v = "_U_n_i_v_a_r_i_a_t_e_D_i_s_t_r_i_b_u_t_i_o_n", _r_i_s_k = "_a_s_M_S_E",  _n_e_i_g_h_b_o_r = "_C_o_n_t_N_e_i_g_h_b_o_r_h_o_o_d",  _b_i_a_s_t_y_p_e = "_o_n_e_s_i_d_e_d_B_i_a_s" 
          used by 'getInfClip' for onesided bias. 

     _L_2_d_e_r_i_v = "_U_n_i_v_a_r_i_a_t_e_D_i_s_t_r_i_b_u_t_i_o_n", _r_i_s_k = "_a_s_M_S_E",  _n_e_i_g_h_b_o_r = "_C_o_n_t_N_e_i_g_h_b_o_r_h_o_o_d",  _b_i_a_s_t_y_p_e = "_a_s_y_m_m_e_t_r_i_c_B_i_a_s" 
          used by 'getInfClip' for asymmetric bias. 

_A_u_t_h_o_r(_s):

     Matthias Kohl Matthias.Kohl@stamats.de, Peter Ruckdeschel
     Peter.Ruckdeschel@uni-bayreuth.de

_R_e_f_e_r_e_n_c_e_s:

     Rieder, H. (1980) Estimates derived from robust tests. Ann. Stats.
     *8*: 106-115.

     Rieder, H. (1994) _Robust Asymptotic Statistics_. New York:
     Springer.

     Ruckdeschel, P. and Rieder, H. (2004) Optimal Influence Curves for
     General Loss Functions. Statistics & Decisions _22_, 201-223.

     Ruckdeschel, P. (2005) Optimally One-Sided Bounded Influence
     Curves. Mathematical Methods in Statistics _14_(1), 105-131.

     Kohl, M. (2005) _Numerical Contributions to the Asymptotic Theory
     of Robustness_.  Bayreuth: Dissertation.

_S_e_e _A_l_s_o:

     'asGRisk-class', 'asMSE-class', 'asUnOvShoot-class',
     'ContIC-class',  'TotalVarIC-class'

