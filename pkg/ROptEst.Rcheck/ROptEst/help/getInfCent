getInfCent              package:ROptEst              R Documentation

_G_e_n_e_r_i_c _F_u_n_c_t_i_o_n _f_o_r _t_h_e _C_o_m_p_u_t_a_t_i_o_n _o_f _t_h_e _O_p_t_i_m_a_l _C_e_n_t_e_r_i_n_g _C_o_n_s_t_a_n_t/_L_o_w_e_r _C_l_i_p_p_i_n_g _B_o_u_n_d

_D_e_s_c_r_i_p_t_i_o_n:

     Generic function for the computation of the optimal centering
     constant (contamination neighborhoods) respectively, of the
     optimal lower clipping bound (total variation neighborhood). This
     function is rarely called directly. It is used to  compute
     optimally robust ICs.

_U_s_a_g_e:

     getInfCent(L2deriv, neighbor, biastype, ...)

     ## S4 method for signature 'UnivariateDistribution,
     ##   ContNeighborhood, BiasType':
     getInfCent(L2deriv, 
          neighbor, biastype = symmetricBias(), clip, cent, tol.z, symm, trafo)

     ## S4 method for signature 'UnivariateDistribution,
     ##   TotalVarNeighborhood, BiasType':
     getInfCent(L2deriv, 
          neighbor, biastype = symmetricBias(), clip, cent, tol.z, symm, trafo)

     ## S4 method for signature 'RealRandVariable,
     ##   ContNeighborhood, BiasType':
     getInfCent(L2deriv, 
          neighbor, biastype = symmetricBias(), z.comp, stand, cent, clip)

     ## S4 method for signature 'UnivariateDistribution,
     ##   ContNeighborhood, onesidedBias':
     getInfCent(L2deriv, 
          neighbor, biastype = positiveBias(), clip, cent, tol.z, symm, trafo)

     ## S4 method for signature 'UnivariateDistribution,
     ##   ContNeighborhood, asymmetricBias':
     getInfCent(L2deriv, 
          neighbor, biastype = asymmetricBias(), clip, cent, tol.z, symm, trafo)

_A_r_g_u_m_e_n_t_s:

 L2deriv: L2-derivative of some L2-differentiable family  of
          probability measures. 

neighbor: object of class '"Neighborhood"'. 

biastype: object of class '"BiasType"' 

     ...: additional parameters. 

    clip: optimal clipping bound. 

    cent: optimal centering constant. 

   stand: standardizing matrix. 

   tol.z: the desired accuracy (convergence tolerance). 

    symm: logical: indicating symmetry of 'L2deriv'. 

   trafo: matrix: transformation of the parameter. 

  z.comp: logical vector: indication which components of the  centering
          constant have to be computed. 

_V_a_l_u_e:

     The optimal centering constant is computed.

_M_e_t_h_o_d_s:

     _L_2_d_e_r_i_v = "_U_n_i_v_a_r_i_a_t_e_D_i_s_t_r_i_b_u_t_i_o_n", _n_e_i_g_h_b_o_r = "_C_o_n_t_N_e_i_g_h_b_o_r_h_o_o_d", _b_i_a_s_t_y_p_e = "_B_i_a_s_T_y_p_e" 
          computation of optimal centering constant for symmetric bias. 

     _L_2_d_e_r_i_v = "_U_n_i_v_a_r_i_a_t_e_D_i_s_t_r_i_b_u_t_i_o_n", _n_e_i_g_h_b_o_r = "_T_o_t_a_l_V_a_r_N_e_i_g_h_b_o_r_h_o_o_d", _b_i_a_s_t_y_p_e = "_B_i_a_s_T_y_p_e" 
          computation of optimal lower clipping bound for symmetric
          bias. 

     _L_2_d_e_r_i_v = "_R_e_a_l_R_a_n_d_V_a_r_i_a_b_l_e", _n_e_i_g_h_b_o_r = "_C_o_n_t_N_e_i_g_h_b_o_r_h_o_o_d", _b_i_a_s_t_y_p_e = "_B_i_a_s_T_y_p_e" 
          computation of optimal centering constant for symmetric bias. 

     _L_2_d_e_r_i_v = "_U_n_i_v_a_r_i_a_t_e_D_i_s_t_r_i_b_u_t_i_o_n", _n_e_i_g_h_b_o_r = "_C_o_n_t_N_e_i_g_h_b_o_r_h_o_o_d", _b_i_a_s_t_y_p_e = "_o_n_e_s_i_d_e_d_B_i_a_s" 
          computation of optimal centering constant for onesided bias. 

     _L_2_d_e_r_i_v = "_U_n_i_v_a_r_i_a_t_e_D_i_s_t_r_i_b_u_t_i_o_n", _n_e_i_g_h_b_o_r = "_C_o_n_t_N_e_i_g_h_b_o_r_h_o_o_d", _b_i_a_s_t_y_p_e = "_a_s_y_m_m_e_t_r_i_c_B_i_a_s" 
          computation of optimal centering constant for asymmetric
          bias. 

_A_u_t_h_o_r(_s):

     Matthias Kohl Matthias.Kohl@stamats.de, Peter Ruckdeschel
     Peter.Ruckdeschel@uni-bayreuth.de

_R_e_f_e_r_e_n_c_e_s:

     Rieder, H. (1994) _Robust Asymptotic Statistics_. New York:
     Springer.

     Ruckdeschel, P. (2005) Optimally One-Sided Bounded Influence
     Curves. Mathematical Methods in Statistics _14_(1), 105-131.

     Kohl, M. (2005) _Numerical Contributions to the Asymptotic Theory
     of Robustness_.  Bayreuth: Dissertation.

_S_e_e _A_l_s_o:

     'ContIC-class', 'TotalVarIC-class'

